// <auto-generated />
using System;
using EticaretCanta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EticaretCanta.Migrations
{
    [DbContext(typeof(Baglanti))]
    partial class BaglantiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EticaretCanta.Models.Categories", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_Id"));

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EticaretCanta.Models.Pictures", b =>
                {
                    b.Property<int>("Picture_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Picture_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.HasKey("Picture_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("EticaretCanta.Models.Products", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Id"));

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Featured")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Sub_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Product_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Sub_Category_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EticaretCanta.Models.Sub_Category", b =>
                {
                    b.Property<int>("Sub_Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sub_Category_Id"));

                    b.Property<int?>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Sub_Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sub_Category_Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Sub_Categories");
                });

            modelBuilder.Entity("EticaretCanta.Models.Pictures", b =>
                {
                    b.HasOne("EticaretCanta.Models.Products", "Products")
                        .WithMany("Pictures")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("EticaretCanta.Models.Products", b =>
                {
                    b.HasOne("EticaretCanta.Models.Categories", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EticaretCanta.Models.Sub_Category", "Sub_Category")
                        .WithMany("Products")
                        .HasForeignKey("Sub_Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Sub_Category");
                });

            modelBuilder.Entity("EticaretCanta.Models.Sub_Category", b =>
                {
                    b.HasOne("EticaretCanta.Models.Categories", "Category")
                        .WithMany("Sub_Categories")
                        .HasForeignKey("Category_Id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EticaretCanta.Models.Categories", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Sub_Categories");
                });

            modelBuilder.Entity("EticaretCanta.Models.Products", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("EticaretCanta.Models.Sub_Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
